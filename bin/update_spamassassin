#!/bin/bash
# -*- coding: utf-8 -*-
# vim: ai ts=4 sts=4 et sw=4
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# This file was forked from MailScanner in July 2016.
# Original author, and relevant copyright and licensing information is below:
# :author: Julian Field
# :copyright: Copyright (C) 2002  Julian Field
#
# Call sa-update and sa-compile if you have them both.
# If you want to add arguments (such as channel file settings) to sa-update
# then do it by editing /etc/sysconfig/Baruwa, *NOT* by editing this
# script.

SAUPDATE=/usr/bin/sa-update
SACOMPILE=/usr/bin/sa-compile
SAUPDATEARGS=""
if [ -f /etc/sysconfig/update_spamassassin ] ; then
        . /etc/sysconfig/update_spamassassin
fi
export SAUPDATE
export SACOMPILE
export SAUPDATEARGS
UPDATESUCCESS=0
COMPILESUCCESS=0
LOGFILE=/tmp/update_spamassassin.$(date +%m%d)

# Update SpamAssassin rules
[ -x $SAUPDATE ] || exit 0
rm -f $LOGFILE
$SAUPDATE $SAUPDATEARGS >$LOGFILE 2>&1
UPDATESUCCESS=$?

if [ $UPDATESUCCESS = 0 ]; then
  # If we have sa-compile and they are using the Rule2XSBody plugin then compile
  if test -x $SACOMPILE && grep -q '^loadplugin.*Rule2XSBody' /etc/mail/spamassassin/*pre 2>/dev/null ; then
    $SACOMPILE >>$LOGFILE 2>&1
    COMPILESUCCESS=$?
  else
    echo $SACOMPILE does not exist or Rule2XSBody plugin not enabled >>$LOGFILE
    COMPILESUCCESS=1
  fi
fi

/etc/init.d/Baruwa reload >>$LOGFILE 2>&1

# Only delete the logfile if the update succeeded
if [ $UPDATESUCCESS = 0 -a $COMPILESUCCESS = 0 -o $UPDATESUCCESS = 1 ]; then
  rm -f $LOGFILE
fi

exit 0
